{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "crossChainController", "type": "address", "internalType": "address" },
        { "name": "wormholeRelayer", "type": "address", "internalType": "address" },
        { "name": "refundAddress", "type": "address", "internalType": "address" },
        { "name": "providerGasLimit", "type": "uint256", "internalType": "uint256" },
        {
          "name": "trustedRemotes",
          "type": "tuple[]",
          "internalType": "struct IBaseAdapter.TrustedRemotesConfig[]",
          "components": [
            { "name": "originForwarder", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "BASE_GAS_LIMIT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "CROSS_CHAIN_CONTROLLER",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IBaseCrossChainController" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "REFUND_ADDRESS",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WORMHOLE_RELAYER",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "adapterName",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "forwardMessage",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "executionGasLimit", "type": "uint256", "internalType": "uint256" },
        { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
        { "name": "message", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getTrustedRemoteByChainId",
      "inputs": [{ "name": "chainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "infraToNativeChainId",
      "inputs": [{ "name": "infraChainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "nativeToInfraChainId",
      "inputs": [{ "name": "nativeChainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "receiveWormholeMessages",
      "inputs": [
        { "name": "payload", "type": "bytes", "internalType": "bytes" },
        { "name": "", "type": "bytes[]", "internalType": "bytes[]" },
        { "name": "sourceAddress", "type": "bytes32", "internalType": "bytes32" },
        { "name": "sourceChain", "type": "uint16", "internalType": "uint16" },
        { "name": "", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    { "type": "function", "name": "setupPayments", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "event",
      "name": "SetTrustedRemote",
      "inputs": [
        { "name": "originChainId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "originForwarder", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "788:4719:96:-:0;;;1606:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1804:20;1826:16;1375:826:52;;;;;;;;;;;;;-1:-1:-1;;;1375:826:52;;;1864:14:96;1574:1:52;-1:-1:-1;;;;;1542:34:52;:20;-1:-1:-1;;;;;1542:34:52;;;1578:50;;;;;;;;;;;;;-1:-1:-1;;;1578:50:52;;;1534:95;;;;;-1:-1:-1;;;1534:95:52;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1635:72:52;;;;1714:33;;;;1753:11;:18;1767:4;1753:11;:18;:::i;:::-;-1:-1:-1;1801:4:52;1778:28;;1818:9;1813:384;1837:13;:20;1833:1;:24;1813:384;;;1872:40;1915:13;1929:1;1915:16;;;;;;;;:::i;:::-;;;;;;;1872:59;;1987:1;-1:-1:-1;;;;;1947:42:52;:12;:28;;;-1:-1:-1;;;;;1947:42:52;;;1991:29;;;;;;;;;;;;;-1:-1:-1;;;1991:29:52;;;1939:82;;;;;-1:-1:-1;;;1939:82:52;;;;;;;;:::i;:::-;-1:-1:-1;2075:28:52;;2045:26;;;;;;2075:28;2029:43;;;;;;;;;;;:74;;-1:-1:-1;;;;;;2029:74:52;-1:-1:-1;;;;;2029:74:52;;;;;;2133:26;;2161:28;;2116:74;;5908:25:118;;;5969:32;;;5949:18;;;5942:60;;;;2116:74:52;;5881:18:118;2116:74:52;;;;;;;-1:-1:-1;1859:3:52;;;;:::i;:::-;;;;1813:384;;;-1:-1:-1;;1925:41:96::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1925:41:96::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;;;1894:29:96;::::1;1886:81;;;;-1:-1:-1::0;;;1886:81:96::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;;;1973:34:96;;::::1;;::::0;2013:30:::1;;::::0;-1:-1:-1;788:4719:96;;14:177:118;93:13;;-1:-1:-1;;;;;135:31:118;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:251;400:2;394:9;;;430:15;;-1:-1:-1;;;;;460:34:118;;496:22;;;457:62;454:88;;;522:18;;:::i;:::-;558:2;551:22;328:251;:::o;584:275::-;655:2;649:9;720:2;701:13;;-1:-1:-1;;697:27:118;685:40;;-1:-1:-1;;;;;740:34:118;;776:22;;;737:62;734:88;;;802:18;;:::i;:::-;838:2;831:22;584:275;;-1:-1:-1;584:275:118:o;864:1591::-;1034:6;1042;1050;1058;1066;1119:3;1107:9;1098:7;1094:23;1090:33;1087:53;;;1136:1;1133;1126:12;1087:53;1159:40;1189:9;1159:40;:::i;:::-;1149:50;;1218:2;1239:49;1284:2;1273:9;1269:18;1239:49;:::i;:::-;1229:59;;1307:2;1328:49;1373:2;1362:9;1358:18;1328:49;:::i;:::-;1417:2;1402:18;;1396:25;1465:3;1450:19;;1444:26;1318:59;;-1:-1:-1;1396:25:118;-1:-1:-1;;;;;;1519:14:118;;;1516:34;;;1546:1;1543;1536:12;1516:34;1584:6;1573:9;1569:22;1559:32;;1629:7;1622:4;1618:2;1614:13;1610:27;1600:55;;1651:1;1648;1641:12;1600:55;1680:2;1674:9;1702:2;1698;1695:10;1692:36;;;1708:18;;:::i;:::-;1748:36;1780:2;1775;1772:1;1768:10;1764:19;1748:36;:::i;:::-;1818:15;;;1849:12;;;;-1:-1:-1;1900:1:118;1896:10;;;;1888:19;;1884:28;;;1924:19;;;1921:39;;;1956:1;1953;1946:12;1921:39;1980:11;;;;2000:425;2016:6;2011:3;2008:15;2000:425;;;2096:2;2090:3;2081:7;2077:17;2073:26;2070:116;;;2140:1;2169:2;2165;2158:14;2070:116;2212:22;;:::i;:::-;2261:34;2291:3;2261:34;:::i;:::-;2247:49;;2338:12;;;2332:19;2316:14;;;2309:43;2365:18;;2033:12;;;;2403;;;;2000:425;;;2444:5;2434:15;;;;;;;;864:1591;;;;;;;;:::o;2460:548::-;2572:4;2601:2;2630;2619:9;2612:21;2662:6;2656:13;2705:6;2700:2;2689:9;2685:18;2678:34;2730:1;2740:140;2754:6;2751:1;2748:13;2740:140;;;2849:14;;;2845:23;;2839:30;2815:17;;;2834:2;2811:26;2804:66;2769:10;;2740:140;;;2744:3;2929:1;2924:2;2915:6;2904:9;2900:22;2896:31;2889:42;2999:2;2992;2988:7;2983:2;2975:6;2971:15;2967:29;2956:9;2952:45;2948:54;2940:62;;;;2460:548;;;;:::o;3013:380::-;3092:1;3088:12;;;;3135;;;3156:61;;3210:4;3202:6;3198:17;3188:27;;3156:61;3263:2;3255:6;3252:14;3232:18;3229:38;3226:161;;3309:10;3304:3;3300:20;3297:1;3290:31;3344:4;3341:1;3334:15;3372:4;3369:1;3362:15;3226:161;;3013:380;;;:::o;3524:545::-;3626:2;3621:3;3618:11;3615:448;;;3662:1;3687:5;3683:2;3676:17;3732:4;3728:2;3718:19;3802:2;3790:10;3786:19;3783:1;3779:27;3773:4;3769:38;3838:4;3826:10;3823:20;3820:47;;;-1:-1:-1;3861:4:118;3820:47;3916:2;3911:3;3907:12;3904:1;3900:20;3894:4;3890:31;3880:41;;3971:82;3989:2;3982:5;3979:13;3971:82;;;4034:17;;;4015:1;4004:13;3971:82;;;3975:3;;;3615:448;3524:545;;;:::o;4245:1352::-;4365:10;;-1:-1:-1;;;;;4387:30:118;;4384:56;;;4420:18;;:::i;:::-;4449:97;4539:6;4499:38;4531:4;4525:11;4499:38;:::i;:::-;4493:4;4449:97;:::i;:::-;4601:4;;4665:2;4654:14;;4682:1;4677:663;;;;5384:1;5401:6;5398:89;;;-1:-1:-1;5453:19:118;;;5447:26;5398:89;-1:-1:-1;;4202:1:118;4198:11;;;4194:24;4190:29;4180:40;4226:1;4222:11;;;4177:57;5500:81;;4647:944;;4677:663;3471:1;3464:14;;;3508:4;3495:18;;-1:-1:-1;;4713:20:118;;;4831:236;4845:7;4842:1;4839:14;4831:236;;;4934:19;;;4928:26;4913:42;;5026:27;;;;4994:1;4982:14;;;;4861:19;;4831:236;;;4835:3;5095:6;5086:7;5083:19;5080:201;;;5156:19;;;5150:26;-1:-1:-1;;5239:1:118;5235:14;;;5251:3;5231:24;5227:37;5223:42;5208:58;5193:74;;5080:201;-1:-1:-1;;;;;5327:1:118;5311:14;;;5307:22;5294:36;;-1:-1:-1;4245:1352:118:o;5602:127::-;5663:10;5658:3;5654:20;5651:1;5644:31;5694:4;5691:1;5684:15;5718:4;5715:1;5708:15;6013:232;6052:3;6073:17;;;6070:140;;6132:10;6127:3;6123:20;6120:1;6113:31;6167:4;6164:1;6157:15;6195:4;6192:1;6185:15;6070:140;-1:-1:-1;6237:1:118;6226:13;;6013:232::o;:::-;788:4719:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061009c5760003560e01c806381fbadad1161006457806381fbadad14610180578063b86a6161146101b4578063ba286578146101ea578063c49563661461020c578063d688758114610240578063f1ae0e9b1461026057600080fd5b80630f1f9cfc146100a15780631e02e77c146100f257806336da7a0614610120578063529dca321461015f57806352d1043d14610174575b600080fd5b3480156100ad57600080fd5b506100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fe57600080fd5b5061011261010d36600461095f565b610294565b6040519081526020016100e9565b34801561012c57600080fd5b5061014061013b3660046109c1565b610336565b604080516001600160a01b0390931683526020830191909152016100e9565b61017261016d366004610a90565b61054c565b005b34801561017257600080fd5b34801561018c57600080fd5b506101127f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c057600080fd5b506100d56101cf36600461095f565b6000908152602081905260409020546001600160a01b031690565b3480156101f657600080fd5b506101ff610642565b6040516100e99190610c02565b34801561021857600080fd5b506100d57f000000000000000000000000000000000000000000000000000000000000000081565b34801561024c57600080fd5b5061011261025b36600461095f565b6106d0565b34801561026c57600080fd5b506100d57f000000000000000000000000000000000000000000000000000000000000000081565b6000816002036102a657506001919050565b816006036102b7575061a86a919050565b816005036102c757506089919050565b816017036102d8575061a4b1919050565b816018036102e85750600a919050565b81600a036102f8575060fa919050565b8160040361030857506038919050565b8160190361031857506064919050565b81600e03610329575061a4ec919050565b506000919050565b919050565b600080600061034c610347876106d0565b610765565b604080518082019091526002815261031360f41b602082015290915061ffff82166103935760405162461bcd60e51b815260040161038a9190610c02565b60405180910390fd5b506040805180820190915260018152603960f81b60208201526001600160a01b0389166103d35760405162461bcd60e51b815260040161038a9190610c02565b5060006104007f000000000000000000000000000000000000000000000000000000000000000089610c50565b9050600061040e82846107cc565b90504781111560405180604001604052806002815260200161313160f01b8152509061044d5760405162461bcd60e51b815260040161038a9190610c02565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634b5ca6f483868e8c8c60008a8c7f00000000000000000000000000000000000000000000000000000000000000006040518a63ffffffff1660e01b81526004016104cc989796959493929190610c9a565b60206040518083038185885af11580156104ea573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061050f9190610cf5565b7f0000000000000000000000000000000000000000000000000000000000000000965067ffffffffffffffff169450505050509550959350505050565b6040805180820190915260028152611a1960f11b6020820152336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ae5760405162461bcd60e51b815260040161038a9190610c02565b508260006105bf61ffff8516610294565b6000818152602081905260409020549091506001600160a01b0383811691161480156105f357506001600160a01b03821615155b60405180604001604052806002815260200161189960f11b8152509061062c5760405162461bcd60e51b815260040161038a9190610c02565b50610638888883610875565b5050505050505050565b6001805461064f90610d26565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90610d26565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b505050505081565b6000600182036106e257506002919050565b61a86a82036106f357506006919050565b6089820361070357506005919050565b61a4b1820361071457506017919050565b600a820361072457506018919050565b60fa82036107345750600a919050565b6038820361074457506004919050565b6064820361075457506019919050565b61a4ec82036103295750600e919050565b600061ffff8211156107c85760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201526536206269747360d01b606482015260840161038a565b5090565b60405163c23ee3c360e01b815261ffff82166004820152600060248201819052604482018490529081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c23ee3c3906064016040805180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190610d60565b509150505b92915050565b6040805180820190915260028152610c8d60f21b6020820152306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260040161038a9190610c02565b506040516376b42cad60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed68595a9061092890869086908690600401610d84565b600060405180830381600087803b15801561094257600080fd5b505af1158015610956573d6000803e3d6000fd5b50505050505050565b60006020828403121561097157600080fd5b5035919050565b60008083601f84011261098a57600080fd5b50813567ffffffffffffffff8111156109a257600080fd5b6020830191508360208285010111156109ba57600080fd5b9250929050565b6000806000806000608086880312156109d957600080fd5b85356001600160a01b03811681146109f057600080fd5b94506020860135935060408601359250606086013567ffffffffffffffff811115610a1a57600080fd5b610a2688828901610978565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7657610a76610a37565b604052919050565b803561ffff8116811461033157600080fd5b60008060008060008060a08789031215610aa957600080fd5b67ffffffffffffffff8088351115610ac057600080fd5b610acd8989358a01610978565b90975095506020880135811015610ae357600080fd5b6020880135880189601f820112610af957600080fd5b8181351115610b0a57610b0a610a37565b610b1a6020823560051b01610a4d565b81358082526020808301929160051b8401018c1015610b3857600080fd5b602083015b6020843560051b850101811015610bd6578481351115610b5c57600080fd5b803584018d603f820112610b6f57600080fd5b602081013586811115610b8457610b84610a37565b610b97601f8201601f1916602001610a4d565b8181528f6040838501011115610bac57600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050610b3d565b50965050505060408701359250610bef60608801610a7e565b9150608087013590509295509295509295565b600060208083528351808285015260005b81811015610c2f57858101830151858201604001528201610c13565b506000604082860101526040601f19601f8301168501019250505092915050565b8082018082111561086f57634e487b7160e01b600052601160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600061ffff808b16835260018060a01b03808b16602085015260e06040850152610cc860e085018a8c610c71565b925087606085015286608085015281861660a085015280851660c085015250509998505050505050505050565b600060208284031215610d0757600080fd5b815167ffffffffffffffff81168114610d1f57600080fd5b9392505050565b600181811c90821680610d3a57607f821691505b602082108103610d5a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008060408385031215610d7357600080fd5b505080516020909101519092909150565b604081526000610d98604083018587610c71565b905082602083015294935050505056fea26469706673582212201313cb53a3a59c9d9eb20f242cadaaa0fd5fded203b27c8caa6a7e6e7955653a64736f6c63430008130033",
    "sourceMap": "788:4719:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:41;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;178:32:118;;;160:51;;148:2;133:18;904:41:96;;;;;;;;3600:754;;;;;;;;;;-1:-1:-1;3600:754:96;;;;;:::i;:::-;;:::i;:::-;;;553:25:118;;;541:2;526:18;3600:754:96;407:177:118;2083:940:96;;;;;;;;;;-1:-1:-1;2083:940:96;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1858:32:118;;;1840:51;;1922:2;1907:18;;1900:34;;;;1813:18;2083:940:96;1666:274:118;3063:502:96;;;;;;:::i;:::-;;:::i;:::-;;2487:44:52;;;;;;;;;585:39;;;;;;;;;;;;;;;2566:126;;;;;;;;;;-1:-1:-1;2566:126:52;;;;;:::i;:::-;2641:7;2663:24;;;;;;;;;;;-1:-1:-1;;;;;2663:24:52;;2566:126;994:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;484:65::-;;;;;;;;;;;;;;;4389:744:96;;;;;;;;;;-1:-1:-1;4389:744:96;;;;;:::i;:::-;;:::i;985:39::-;;;;;;;;;;;;;;;3600:754;3699:7;3718:13;3735:1;3718:18;3714:636;;-1:-1:-1;106:1:115;;3600:754:96;-1:-1:-1;3600:754:96:o;3714:636::-;3787:13;3804:1;3787:18;3783:567;;-1:-1:-1;174:5:115;;3600:754:96;-1:-1:-1;3600:754:96:o;3783:567::-;3857:13;3874:1;3857:18;3853:497;;-1:-1:-1;138:3:115;;3600:754:96;-1:-1:-1;3600:754:96:o;3853:497::-;3925:13;3942:2;3925:19;3921:429;;-1:-1:-1;211:5:115;;3600:754:96;-1:-1:-1;3600:754:96:o;3921:429::-;3995:13;4012:2;3995:19;3991:359;;-1:-1:-1;248:2:115;;3600:754:96;-1:-1:-1;3600:754:96:o;3991:359::-;4065:13;4082:2;4065:19;4061:289;;-1:-1:-1;280:3:115;;3600:754:96;-1:-1:-1;3600:754:96:o;4061:289::-;4133:13;4150:1;4133:18;4129:221;;-1:-1:-1;384:2:115;;3600:754:96;-1:-1:-1;3600:754:96:o;4129:221::-;4197:13;4214:2;4197:19;4193:157;;-1:-1:-1;490:3:115;;3600:754:96;-1:-1:-1;3600:754:96:o;4193:157::-;4265:13;4282:2;4265:19;4261:89;;-1:-1:-1;557:5:115;;3600:754:96;-1:-1:-1;3600:754:96:o;4261:89::-;-1:-1:-1;4342:1:96;;3600:754;-1:-1:-1;3600:754:96:o;4261:89::-;3600:754;;;:::o;2083:940::-;2242:7;2251;2266:20;2289:59;2307:40;2328:18;2307:20;:40::i;:::-;2289:17;:59::i;:::-;2390:41;;;;;;;;;;;;-1:-1:-1;;;2390:41:96;;;;2266:82;;-1:-1:-1;2362:26:96;;;2354:78;;;;-1:-1:-1;;;2354:78:96;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2470:23:96;;;;;;;;;;;;-1:-1:-1;;;2470:23:96;;;;-1:-1:-1;;;;;2446:22:96;;2438:56;;;;-1:-1:-1;;;2438:56:96;;;;;;;;:::i;:::-;-1:-1:-1;2501:21:96;2525:34;2545:14;2525:17;:34;:::i;:::-;2501:58;;2566:12;2581:41;2593:13;2608;2581:11;:41::i;:::-;2566:56;;2644:21;2636:4;:29;;2667:42;;;;;;;;;;;;;-1:-1:-1;;;2667:42:96;;;2628:82;;;;;-1:-1:-1;;;2628:82:96;;;;;;;;:::i;:::-;;2717:15;2752:16;-1:-1:-1;;;;;2735:51:96;;2794:4;2807:13;2828:8;2844:7;;2859:1;2896:13;2917;2938:14;2735:223;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2981:16;;-1:-1:-1;3000:17:96;;;-1:-1:-1;;;;;2083:940:96;;;;;;;;:::o;3063:502::-;1169:34;;;;;;;;;;;;-1:-1:-1;;;1169:34:96;;;;1137:10;-1:-1:-1;;;;;1151:16:96;1137:30;;1129:75;;;;-1:-1:-1;;;1129:75:96;;;;;;;;:::i;:::-;-1:-1:-1;3292:13:96;3247:18:::1;3339:33;;::::0;::::1;:20;:33::i;:::-;3394:15;:30:::0;;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;;3394:44:96;;::::1;:30:::0;::::1;:44;:72:::0;::::1;;;-1:-1:-1::0;;;;;;3442:24:96;::::1;::::0;::::1;3394:72;3474:25;;;;;;;;;;;;;-1:-1:-1::0;;;3474:25:96::1;;::::0;3379:126:::1;;;;;-1:-1:-1::0;;;3379:126:96::1;;;;;;;;:::i;:::-;;3512:48;3537:7;;3546:13;3512:24;:48::i;:::-;3241:324;;3063:502:::0;;;;;;:::o;994:25:52:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4389:744:96:-;4487:7;106:1:115;4506:12:96;:33;4502:627;;-1:-1:-1;4556:1:96;;4389:744;-1:-1:-1;4389:744:96:o;4502:627::-;174:5:115;4574:12:96;:34;4570:559;;-1:-1:-1;4625:1:96;;4389:744;-1:-1:-1;4389:744:96:o;4570:559::-;138:3:115;4643:12:96;:32;4639:490;;-1:-1:-1;4692:1:96;;4389:744;-1:-1:-1;4389:744:96:o;4639:490::-;211:5:115;4710:12:96;:33;4706:423;;-1:-1:-1;4760:2:96;;4389:744;-1:-1:-1;4389:744:96:o;4706:423::-;248:2:115;4779:12:96;:33;4775:354;;-1:-1:-1;4829:2:96;;4389:744;-1:-1:-1;4389:744:96:o;4775:354::-;280:3:115;4848:12:96;:31;4844:285;;-1:-1:-1;4896:2:96;;4389:744;-1:-1:-1;4389:744:96:o;4844:285::-;384:2:115;4915:12:96;:28;4911:218;;-1:-1:-1;4960:1:96;;4389:744;-1:-1:-1;4389:744:96:o;4911:218::-;490:3:115;4978:12:96;:31;4974:155;;-1:-1:-1;5026:2:96;;4389:744;-1:-1:-1;4389:744:96:o;4974:155::-;557:5:115;5045:12:96;:29;5041:88;;-1:-1:-1;5091:2:96;;4389:744;-1:-1:-1;4389:744:96:o;16288:187:27:-;16344:6;16379:16;16370:25;;;16362:76;;;;-1:-1:-1;;;16362:76:27;;7462:2:118;16362:76:27;;;7444:21:118;7501:2;7481:18;;;7474:30;7540:34;7520:18;;;7513:62;-1:-1:-1;;;7591:18:118;;;7584:36;7637:19;;16362:76:27;7260:402:118;16362:76:27;-1:-1:-1;16462:5:27;16288:187::o;5251:254:96:-;5372:111;;-1:-1:-1;;;5372:111:96;;7905:6:118;7893:19;;5372:111:96;;;7875:38:118;5338:7:96;7929:18:118;;;7922:34;;;7972:18;;;7965:34;;;5338:7:96;;;-1:-1:-1;;;;;5389:16:96;5372:56;;;;7848:18:118;;5372:111:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5353:130:96;-1:-1:-1;;5251:254:96;;;;;:::o;2909:302:52:-;3097:30;;;;;;;;;;;;-1:-1:-1;;;3097:30:52;;;;3074:4;-1:-1:-1;;;;;3083:12:52;3066:29;;3058:70;;;;-1:-1:-1;;;3058:70:52;;;;;;;;:::i;:::-;-1:-1:-1;3134:72:52;;-1:-1:-1;;;3134:72:52;;-1:-1:-1;;;;;3134:22:52;:47;;;;:72;;3182:8;;;;3192:13;;3134:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:302;;;:::o;222:180:118:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:118;;222:180;-1:-1:-1;222:180:118:o;589:347::-;640:8;650:6;704:3;697:4;689:6;685:17;681:27;671:55;;722:1;719;712:12;671:55;-1:-1:-1;745:20:118;;788:18;777:30;;774:50;;;820:1;817;810:12;774:50;857:4;849:6;845:17;833:29;;909:3;902:4;893:6;885;881:19;877:30;874:39;871:59;;;926:1;923;916:12;871:59;589:347;;;;;:::o;941:720::-;1038:6;1046;1054;1062;1070;1123:3;1111:9;1102:7;1098:23;1094:33;1091:53;;;1140:1;1137;1130:12;1091:53;1166:23;;-1:-1:-1;;;;;1218:31:118;;1208:42;;1198:70;;1264:1;1261;1254:12;1198:70;1287:5;-1:-1:-1;1339:2:118;1324:18;;1311:32;;-1:-1:-1;1390:2:118;1375:18;;1362:32;;-1:-1:-1;1445:2:118;1430:18;;1417:32;1472:18;1461:30;;1458:50;;;1504:1;1501;1494:12;1458:50;1543:58;1593:7;1584:6;1573:9;1569:22;1543:58;:::i;:::-;941:720;;;;-1:-1:-1;941:720:118;;-1:-1:-1;1620:8:118;;1517:84;941:720;-1:-1:-1;;;941:720:118:o;1945:127::-;2006:10;2001:3;1997:20;1994:1;1987:31;2037:4;2034:1;2027:15;2061:4;2058:1;2051:15;2077:275;2148:2;2142:9;2213:2;2194:13;;-1:-1:-1;;2190:27:118;2178:40;;2248:18;2233:34;;2269:22;;;2230:62;2227:88;;;2295:18;;:::i;:::-;2331:2;2324:22;2077:275;;-1:-1:-1;2077:275:118:o;2357:159::-;2424:20;;2484:6;2473:18;;2463:29;;2453:57;;2506:1;2503;2496:12;2521:1979;2660:6;2668;2676;2684;2692;2700;2753:3;2741:9;2732:7;2728:23;2724:33;2721:53;;;2770:1;2767;2760:12;2721:53;2793:18;2851:2;2839:9;2826:23;2823:31;2820:51;;;2867:1;2864;2857:12;2820:51;2906:75;2973:7;2960:9;2947:23;2936:9;2932:39;2906:75;:::i;:::-;3000:8;;-1:-1:-1;3027:8:118;-1:-1:-1;3078:2:118;3063:18;;3050:32;3047:40;-1:-1:-1;3044:60:118;;;3100:1;3097;3090:12;3044:60;3166:2;3155:9;3151:18;3138:32;3127:9;3123:48;3209:7;3202:4;3198:2;3194:13;3190:27;3180:55;;3231:1;3228;3221:12;3180:55;3268:2;3263;3250:16;3247:24;3244:50;;;3274:18;;:::i;:::-;3314:50;3360:2;3354;3341:16;3338:1;3334:24;3330:33;3314:50;:::i;:::-;3410:16;;3398:29;;;3452:2;3443:12;;;;3386:3;3486:1;3482:24;3474:33;;3470:42;3467:55;-1:-1:-1;3464:75:118;;;3535:1;3532;3525:12;3464:75;3567:2;3563;3559:11;3579:732;3642:2;3635;3622:16;3619:1;3615:24;3611:2;3607:33;3603:42;3598:3;3595:51;3579:732;;;3726:2;3720:3;3707:17;3704:25;3701:45;;;3742:1;3739;3732:12;3701:45;3790:3;3777:17;3773:2;3769:26;3835:7;3830:2;3826;3822:11;3818:25;3808:53;;3857:1;3854;3847:12;3808:53;3905:2;3901;3897:11;3884:25;3932:2;3928;3925:10;3922:36;;;3938:18;;:::i;:::-;3984:53;4027:2;4008:13;;-1:-1:-1;;4004:27:118;4033:2;4000:36;3984:53;:::i;:::-;4064:2;4057:5;4050:17;4108:7;4103:2;4098;4094;4090:11;4086:20;4083:33;4080:53;;;4129:1;4126;4119:12;4080:53;4188:2;4183;4179;4175:11;4170:2;4163:5;4159:14;4146:45;4236:1;4231:2;4226;4219:5;4215:14;4211:23;4204:34;4263:5;4258:3;4251:18;;;;4298:2;4293:3;4289:12;4282:19;;3673:2;3668:3;3664:12;3657:19;;3579:732;;;-1:-1:-1;4330:5:118;-1:-1:-1;;;;4382:2:118;4367:18;;4354:32;;-1:-1:-1;4405:37:118;4438:2;4423:18;;4405:37;:::i;:::-;4395:47;;4489:3;4478:9;4474:19;4461:33;4451:43;;2521:1979;;;;;;;;:::o;4505:548::-;4617:4;4646:2;4675;4664:9;4657:21;4707:6;4701:13;4750:6;4745:2;4734:9;4730:18;4723:34;4775:1;4785:140;4799:6;4796:1;4793:13;4785:140;;;4894:14;;;4890:23;;4884:30;4860:17;;;4879:2;4856:26;4849:66;4814:10;;4785:140;;;4789:3;4974:1;4969:2;4960:6;4949:9;4945:22;4941:31;4934:42;5044:2;5037;5033:7;5028:2;5020:6;5016:15;5012:29;5001:9;4997:45;4993:54;4985:62;;;;4505:548;;;;:::o;5301:222::-;5366:9;;;5387:10;;;5384:133;;;5439:10;5434:3;5430:20;5427:1;5420:31;5474:4;5471:1;5464:15;5502:4;5499:1;5492:15;5528:266;5616:6;5611:3;5604:19;5668:6;5661:5;5654:4;5649:3;5645:14;5632:43;-1:-1:-1;5720:1:118;5695:16;;;5713:4;5691:27;;;5684:38;;;;5776:2;5755:15;;;-1:-1:-1;;5751:29:118;5742:39;;;5738:50;;5528:266::o;5799:778::-;6091:4;6120:6;6165:2;6157:6;6153:15;6142:9;6135:34;6205:1;6201;6196:3;6192:11;6188:19;6255:2;6247:6;6243:15;6238:2;6227:9;6223:18;6216:43;6295:3;6290:2;6279:9;6275:18;6268:31;6316:62;6373:3;6362:9;6358:19;6350:6;6342;6316:62;:::i;:::-;6308:70;;6414:6;6409:2;6398:9;6394:18;6387:34;6458:6;6452:3;6441:9;6437:19;6430:35;6514:2;6506:6;6502:15;6496:3;6485:9;6481:19;6474:44;6567:2;6559:6;6555:15;6549:3;6538:9;6534:19;6527:44;;;5799:778;;;;;;;;;;;:::o;6582:288::-;6651:6;6704:2;6692:9;6683:7;6679:23;6675:32;6672:52;;;6720:1;6717;6710:12;6672:52;6752:9;6746:16;6802:18;6795:5;6791:30;6784:5;6781:41;6771:69;;6836:1;6833;6826:12;6771:69;6859:5;6582:288;-1:-1:-1;;;6582:288:118:o;6875:380::-;6954:1;6950:12;;;;6997;;;7018:61;;7072:4;7064:6;7060:17;7050:27;;7018:61;7125:2;7117:6;7114:14;7094:18;7091:38;7088:161;;7171:10;7166:3;7162:20;7159:1;7152:31;7206:4;7203:1;7196:15;7234:4;7231:1;7224:15;7088:161;;6875:380;;;:::o;8010:245::-;8089:6;8097;8150:2;8138:9;8129:7;8125:23;8121:32;8118:52;;;8166:1;8163;8156:12;8118:52;-1:-1:-1;;8189:16:118;;8245:2;8230:18;;;8224:25;8189:16;;8224:25;;-1:-1:-1;8010:245:118:o;8260:315::-;8445:2;8434:9;8427:21;8408:4;8465:61;8522:2;8511:9;8507:18;8499:6;8491;8465:61;:::i;:::-;8457:69;;8562:6;8557:2;8546:9;8542:18;8535:34;8260:315;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "52107": [
        { "start": 542, "length": 32 },
        { "start": 2287, "length": 32 }
      ],
      "52110": [
        { "start": 402, "length": 32 },
        { "start": 987, "length": 32 }
      ],
      "52112": [{ "start": 2201, "length": 32 }],
      "56563": [
        { "start": 179, "length": 32 },
        { "start": 1106, "length": 32 },
        { "start": 1297, "length": 32 },
        { "start": 1392, "length": 32 },
        { "start": 2048, "length": 32 }
      ],
      "56566": [
        { "start": 626, "length": 32 },
        { "start": 1162, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "BASE_GAS_LIMIT()": "81fbadad",
    "CROSS_CHAIN_CONTROLLER()": "c4956366",
    "REFUND_ADDRESS()": "f1ae0e9b",
    "WORMHOLE_RELAYER()": "0f1f9cfc",
    "adapterName()": "ba286578",
    "forwardMessage(address,uint256,uint256,bytes)": "36da7a06",
    "getTrustedRemoteByChainId(uint256)": "b86a6161",
    "infraToNativeChainId(uint256)": "d6887581",
    "nativeToInfraChainId(uint256)": "1e02e77c",
    "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
    "setupPayments()": "52d1043d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"crossChainController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wormholeRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"providerGasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"originForwarder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseAdapter.TrustedRemotesConfig[]\",\"name\":\"trustedRemotes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originForwarder\",\"type\":\"address\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CROSS_CHAIN_CONTROLLER\",\"outputs\":[{\"internalType\":\"contract IBaseCrossChainController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFUND_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WORMHOLE_RELAYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapterName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"executionGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"forwardMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getTrustedRemoteByChainId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"infraChainId\",\"type\":\"uint256\"}],\"name\":\"infraToNativeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeChainId\",\"type\":\"uint256\"}],\"name\":\"nativeToInfraChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BGD Labs\",\"details\":\"it uses the eth balance of CrossChainController contract to pay for message bridging as the method to bridge is called via delegate call\",\"events\":{\"SetTrustedRemote(uint256,address)\":{\"params\":{\"originChainId\":\"id of the chain where the trusted remote is from\",\"originForwarder\":\"address of the contract that will send the messages\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"crossChainController\":\"address of the cross chain controller that will use this bridge adapter\",\"providerGasLimit\":\"base gas limit used by the bridge adapter\",\"refundAddress\":\"address that will receive left over gas\",\"trustedRemotes\":\"list of remote configurations to set as trusted\",\"wormholeRelayer\":\"wormhole entry point address\"}},\"forwardMessage(address,uint256,uint256,bytes)\":{\"params\":{\"destinationChainId\":\"id of the destination chain in the bridge notation\",\"executionGasLimit\":\"amount of the gas limit in wei to use for delivering the message on destination network. Each adapter will manage this as needed.\",\"message\":\"to send to the specified chain\",\"receiver\":\"address of the receiver contract on destination chain\"},\"returns\":{\"_0\":\"the third-party bridge entrypoint, the third-party bridge message id\"}},\"getTrustedRemoteByChainId(uint256)\":{\"params\":{\"chainId\":\"id of the chain from where to get the trusted remote\"},\"returns\":{\"_0\":\"address of the trusted remote\"}},\"infraToNativeChainId(uint256)\":{\"params\":{\"infraChainId\":\"infrastructure chain id\"}},\"nativeToInfraChainId(uint256)\":{\"params\":{\"bridgeChainId\":\"bridge native chain id\"}},\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"params\":{\"additionalMessages\":\"- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp\",\"deliveryHash\":\"- the VAA hash of the deliveryVAA.\",\"payload\":\"- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\",\"sourceAddress\":\"- the (wormhole format) address on the sending chain which requested     this delivery.\",\"sourceChain\":\"- the wormhole chain ID where this delivery was requested.\"}}},\"stateVariables\":{\"REFUND_ADDRESS\":{\"details\":\"should be CrossChainController on destination chain\",\"return\":\"address that will receive the refunds\",\"returns\":{\"_0\":\"address that will receive the refunds\"}},\"WORMHOLE_RELAYER\":{\"return\":\"address of the Wormhole relayer\",\"returns\":{\"_0\":\"address of the Wormhole relayer\"}}},\"title\":\"WormholeAdapter\",\"version\":1},\"userdoc\":{\"events\":{\"SetTrustedRemote(uint256,address)\":{\"notice\":\"emitted when a trusted remote is set\"}},\"kind\":\"user\",\"methods\":{\"BASE_GAS_LIMIT()\":{\"notice\":\"method to get the base gas limit used by the bridge adapter\"},\"CROSS_CHAIN_CONTROLLER()\":{\"notice\":\"method to get the address of the linked cross chain controller\"},\"REFUND_ADDRESS()\":{\"notice\":\"method to get the refund address on destination chain\"},\"WORMHOLE_RELAYER()\":{\"notice\":\"method to get the Wormhole relayer address\"},\"adapterName()\":{\"notice\":\"method to get the name of the adapter contract\"},\"forwardMessage(address,uint256,uint256,bytes)\":{\"notice\":\"method that will bridge the payload to the chain specified\"},\"getTrustedRemoteByChainId(uint256)\":{\"notice\":\"method to get the trusted remote address from a specified chain id\"},\"infraToNativeChainId(uint256)\":{\"notice\":\"method to get bridge native chain id from native bridge chain id\"},\"nativeToInfraChainId(uint256)\":{\"notice\":\"method to get infrastructure chain id from bridge native chain id\"},\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"notice\":\"When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`.\"},\"setupPayments()\":{\"notice\":\"method used to setup payment, ie grant approvals over tokens used to pay for tx fees\"}},\"notice\":\"Wormhole bridge adapter. Used to send and receive messages cross chain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/adapters/wormhole/WormholeAdapter.sol\":\"WormholeAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/\",\":@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":aave-address-book/=lib/aave-address-book/src/\",\":aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/=lib/fx-portal/contracts/\",\":hyperlane-monorepo/=lib/hyperlane-monorepo/solidity/contracts/\",\":nitro-contracts/=lib/nitro-contracts/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol\":{\"keccak256\":\"0xb7339cccbe91b2b0d9bd9adf4be58605ee75032eead9e3213304c6ae5ba108c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09db6f6a18144eb4a47353163408cebd32499b2611972cc8ddffc257654780b1\",\"dweb:/ipfs/Qmb6A7wFipu6seiUG3n2LoeWo91Nrj9xsapJKqEXExe7MX\"]},\"src/contracts/adapters/BaseAdapter.sol\":{\"keccak256\":\"0xcb7ee10798d7786fcc15d882c87a185346ddc339f6e72faf9362716db5f13afb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://25971e10a2407e3bc1d25c02abb28b474dc7962a468ecacf8b4fbc718c8a99de\",\"dweb:/ipfs/QmcNhbWVPj6TA75mqdRo4FCvw33Q15fA2utXPMFpa8XqUS\"]},\"src/contracts/adapters/IBaseAdapter.sol\":{\"keccak256\":\"0x97ef80b6aeebf7ced38ac3816fd57e5eabd58ae251d47f17b63d2981b1f92e8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57a009f5ed843cfa18508b9f36eeaa521f233563553c9d16e80eaba90f81369b\",\"dweb:/ipfs/QmaABhvQyMjF43qshQAH5hWrNqkWfYhYqHSYBmAgq6icug\"]},\"src/contracts/adapters/wormhole/IWormholeAdapter.sol\":{\"keccak256\":\"0x475be179962baa77ca00f4a9e92e64174052470d1600295eac8b844c2d949d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbcb0d5f13ac63a5818bccc976ac31910d64aca686ac1ede938e68c7cac4b29\",\"dweb:/ipfs/QmXuneuwroEdSaCV9bgwgajkoXj238nXoguqN9qK14kquV\"]},\"src/contracts/adapters/wormhole/WormholeAdapter.sol\":{\"keccak256\":\"0x0a65b438e616935bbb1c62801ab4b9b5239eecff6128c6d0ea3d478f1775a540\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8829e93710c87cd9d9ac756d6e337bef9d05ffedced90d4974ab20110b59bb4e\",\"dweb:/ipfs/QmdWBkijt9GDuhUHobPFkfJADfwMtho7ts8sE4jxdZffkP\"]},\"src/contracts/adapters/wormhole/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x1c9244c1a2fd4481b4fb7468d8165e5a9422741c406e6a3fbe2f66f64ab388eb\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://2c2781755ec950c44a3afc230eb68240e0f48f0811c6a33c31a33d5d5916a665\",\"dweb:/ipfs/QmQZYF6HDYhTDQz6MiFMQbyeiiJFTZTjtzpGh2ho11M8gs\"]},\"src/contracts/adapters/wormhole/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x8d6f240af6bb10b7c8970ffcd523b5090e0809a116d44fb65e1baaa77c39380e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://43e1d20e54ba31a01becf9891638d2dcb9e721599d8b875b6394cdb13d9806e7\",\"dweb:/ipfs/QmT84EArfNLCAbAoSVNaKiL3AmkC8aFF3MorqSh9cHG6PB\"]},\"src/contracts/interfaces/IBaseCrossChainController.sol\":{\"keccak256\":\"0x5d226f4f433e4b73650f8f1a749eac15f44c537d2561b44fb8b979221d2fa22b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20ec37bc28bd5bb67940021014f169a90912b8c281f4220949ea9e6e940116c9\",\"dweb:/ipfs/QmXH9QBmoApfSYR82ZRVpu2JGekdE4116puXrJgkfLEdYe\"]},\"src/contracts/interfaces/ICrossChainForwarder.sol\":{\"keccak256\":\"0x7c67c32148d66de52ca28ae18c115b10753772aacd6dd020280590f137cc2056\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4077ddc3e091ee38556a7c0797de9b1608f32765d9f62a07efea6505bbebfa7c\",\"dweb:/ipfs/Qmbns917YEfng8nqn8wu3KnKBy562K7uWK3kxfzRsPdY27\"]},\"src/contracts/interfaces/ICrossChainReceiver.sol\":{\"keccak256\":\"0xf55d606adfb99cf829845731241d6eff48ef3a36153290fb6daf7af2250e3ec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1331b21d98f083181beb5f1f9b817757760a4ef3d79665e118fb4036ca7c056a\",\"dweb:/ipfs/QmUXUZeess24rcSjXxo1geCu9BxG4X7ivEHGKhSy6bPbmW\"]},\"src/contracts/libs/ChainIds.sol\":{\"keccak256\":\"0x53d799dd1f06ca2bb27fb0905538763115854d09c6efe81b1ec083737ed0a452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227ad995b92f95005b3acf450113a88524819021ac3176b52e603e52a6e0e822\",\"dweb:/ipfs/QmWn9DHB1WkegTSq54QPsgHaZTvuTymMYyeQBvg7foDhXc\"]},\"src/contracts/libs/EncodingUtils.sol\":{\"keccak256\":\"0xe778561273ede6b3db73f2fb7b2b443cf0a733a209967af59db107406b68964a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7361dd55dee3cf7bd053d7cd289e148c9451e98c8126672e6287f4e769ab8fba\",\"dweb:/ipfs/QmeH1cwptCar31XamSH2QHSeG4BrS86KNdAbnvk6VGFvLB\"]},\"src/contracts/libs/Errors.sol\":{\"keccak256\":\"0x4a4502debe85d126eb37f8268d2d816636ae21c08b0dae7f26cb11d2bae0f80d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab72c20ea1e07f3bf567cddd96a0749b9a0afb0beefdc9a6f589657f4f97bc39\",\"dweb:/ipfs/QmXXu7CRbhhHqpjdvoBanTsf7wjD6N457ho3vE2dprSy2S\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "crossChainController", "type": "address" },
            { "internalType": "address", "name": "wormholeRelayer", "type": "address" },
            { "internalType": "address", "name": "refundAddress", "type": "address" },
            { "internalType": "uint256", "name": "providerGasLimit", "type": "uint256" },
            {
              "internalType": "struct IBaseAdapter.TrustedRemotesConfig[]",
              "name": "trustedRemotes",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "originForwarder", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "originChainId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "originForwarder", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "SetTrustedRemote",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE_GAS_LIMIT",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CROSS_CHAIN_CONTROLLER",
          "outputs": [{ "internalType": "contract IBaseCrossChainController", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REFUND_ADDRESS",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WORMHOLE_RELAYER",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adapterName",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" },
            { "internalType": "uint256", "name": "executionGasLimit", "type": "uint256" },
            { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
            { "internalType": "bytes", "name": "message", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forwardMessage",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "chainId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTrustedRemoteByChainId",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "infraChainId", "type": "uint256" }],
          "stateMutability": "pure",
          "type": "function",
          "name": "infraToNativeChainId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "nativeChainId", "type": "uint256" }],
          "stateMutability": "pure",
          "type": "function",
          "name": "nativeToInfraChainId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "payload", "type": "bytes" },
            { "internalType": "bytes[]", "name": "", "type": "bytes[]" },
            { "internalType": "bytes32", "name": "sourceAddress", "type": "bytes32" },
            { "internalType": "uint16", "name": "sourceChain", "type": "uint16" },
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "receiveWormholeMessages"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "setupPayments" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "crossChainController": "address of the cross chain controller that will use this bridge adapter",
              "providerGasLimit": "base gas limit used by the bridge adapter",
              "refundAddress": "address that will receive left over gas",
              "trustedRemotes": "list of remote configurations to set as trusted",
              "wormholeRelayer": "wormhole entry point address"
            }
          },
          "forwardMessage(address,uint256,uint256,bytes)": {
            "params": {
              "destinationChainId": "id of the destination chain in the bridge notation",
              "executionGasLimit": "amount of the gas limit in wei to use for delivering the message on destination network. Each adapter will manage this as needed.",
              "message": "to send to the specified chain",
              "receiver": "address of the receiver contract on destination chain"
            },
            "returns": { "_0": "the third-party bridge entrypoint, the third-party bridge message id" }
          },
          "getTrustedRemoteByChainId(uint256)": {
            "params": { "chainId": "id of the chain from where to get the trusted remote" },
            "returns": { "_0": "address of the trusted remote" }
          },
          "infraToNativeChainId(uint256)": { "params": { "infraChainId": "infrastructure chain id" } },
          "nativeToInfraChainId(uint256)": { "params": { "bridgeChainId": "bridge native chain id" } },
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
            "params": {
              "additionalMessages": "- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp",
              "deliveryHash": "- the VAA hash of the deliveryVAA.",
              "payload": "- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)",
              "sourceAddress": "- the (wormhole format) address on the sending chain which requested     this delivery.",
              "sourceChain": "- the wormhole chain ID where this delivery was requested."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BASE_GAS_LIMIT()": { "notice": "method to get the base gas limit used by the bridge adapter" },
          "CROSS_CHAIN_CONTROLLER()": { "notice": "method to get the address of the linked cross chain controller" },
          "REFUND_ADDRESS()": { "notice": "method to get the refund address on destination chain" },
          "WORMHOLE_RELAYER()": { "notice": "method to get the Wormhole relayer address" },
          "adapterName()": { "notice": "method to get the name of the adapter contract" },
          "forwardMessage(address,uint256,uint256,bytes)": {
            "notice": "method that will bridge the payload to the chain specified"
          },
          "getTrustedRemoteByChainId(uint256)": {
            "notice": "method to get the trusted remote address from a specified chain id"
          },
          "infraToNativeChainId(uint256)": {
            "notice": "method to get bridge native chain id from native bridge chain id"
          },
          "nativeToInfraChainId(uint256)": {
            "notice": "method to get infrastructure chain id from bridge native chain id"
          },
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
            "notice": "When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`."
          },
          "setupPayments()": {
            "notice": "method used to setup payment, ie grant approvals over tokens used to pay for tx fees"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/",
        "@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "aave-address-book/=lib/aave-address-book/src/",
        "aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/",
        "aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "fx-portal/=lib/fx-portal/contracts/",
        "hyperlane-monorepo/=lib/hyperlane-monorepo/solidity/contracts/",
        "nitro-contracts/=lib/nitro-contracts/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-utils/=lib/solidity-utils/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/contracts/adapters/wormhole/WormholeAdapter.sol": "WormholeAdapter" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol": {
        "keccak256": "0xb7339cccbe91b2b0d9bd9adf4be58605ee75032eead9e3213304c6ae5ba108c1",
        "urls": [
          "bzz-raw://09db6f6a18144eb4a47353163408cebd32499b2611972cc8ddffc257654780b1",
          "dweb:/ipfs/Qmb6A7wFipu6seiUG3n2LoeWo91Nrj9xsapJKqEXExe7MX"
        ],
        "license": "MIT"
      },
      "src/contracts/adapters/BaseAdapter.sol": {
        "keccak256": "0xcb7ee10798d7786fcc15d882c87a185346ddc339f6e72faf9362716db5f13afb",
        "urls": [
          "bzz-raw://25971e10a2407e3bc1d25c02abb28b474dc7962a468ecacf8b4fbc718c8a99de",
          "dweb:/ipfs/QmcNhbWVPj6TA75mqdRo4FCvw33Q15fA2utXPMFpa8XqUS"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/adapters/IBaseAdapter.sol": {
        "keccak256": "0x97ef80b6aeebf7ced38ac3816fd57e5eabd58ae251d47f17b63d2981b1f92e8b",
        "urls": [
          "bzz-raw://57a009f5ed843cfa18508b9f36eeaa521f233563553c9d16e80eaba90f81369b",
          "dweb:/ipfs/QmaABhvQyMjF43qshQAH5hWrNqkWfYhYqHSYBmAgq6icug"
        ],
        "license": "MIT"
      },
      "src/contracts/adapters/wormhole/IWormholeAdapter.sol": {
        "keccak256": "0x475be179962baa77ca00f4a9e92e64174052470d1600295eac8b844c2d949d86",
        "urls": [
          "bzz-raw://3fbcb0d5f13ac63a5818bccc976ac31910d64aca686ac1ede938e68c7cac4b29",
          "dweb:/ipfs/QmXuneuwroEdSaCV9bgwgajkoXj238nXoguqN9qK14kquV"
        ],
        "license": "MIT"
      },
      "src/contracts/adapters/wormhole/WormholeAdapter.sol": {
        "keccak256": "0x0a65b438e616935bbb1c62801ab4b9b5239eecff6128c6d0ea3d478f1775a540",
        "urls": [
          "bzz-raw://8829e93710c87cd9d9ac756d6e337bef9d05ffedced90d4974ab20110b59bb4e",
          "dweb:/ipfs/QmdWBkijt9GDuhUHobPFkfJADfwMtho7ts8sE4jxdZffkP"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/adapters/wormhole/interfaces/IWormholeReceiver.sol": {
        "keccak256": "0x1c9244c1a2fd4481b4fb7468d8165e5a9422741c406e6a3fbe2f66f64ab388eb",
        "urls": [
          "bzz-raw://2c2781755ec950c44a3afc230eb68240e0f48f0811c6a33c31a33d5d5916a665",
          "dweb:/ipfs/QmQZYF6HDYhTDQz6MiFMQbyeiiJFTZTjtzpGh2ho11M8gs"
        ],
        "license": "Apache 2"
      },
      "src/contracts/adapters/wormhole/interfaces/IWormholeRelayer.sol": {
        "keccak256": "0x8d6f240af6bb10b7c8970ffcd523b5090e0809a116d44fb65e1baaa77c39380e",
        "urls": [
          "bzz-raw://43e1d20e54ba31a01becf9891638d2dcb9e721599d8b875b6394cdb13d9806e7",
          "dweb:/ipfs/QmT84EArfNLCAbAoSVNaKiL3AmkC8aFF3MorqSh9cHG6PB"
        ],
        "license": "Apache 2"
      },
      "src/contracts/interfaces/IBaseCrossChainController.sol": {
        "keccak256": "0x5d226f4f433e4b73650f8f1a749eac15f44c537d2561b44fb8b979221d2fa22b",
        "urls": [
          "bzz-raw://20ec37bc28bd5bb67940021014f169a90912b8c281f4220949ea9e6e940116c9",
          "dweb:/ipfs/QmXH9QBmoApfSYR82ZRVpu2JGekdE4116puXrJgkfLEdYe"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/ICrossChainForwarder.sol": {
        "keccak256": "0x7c67c32148d66de52ca28ae18c115b10753772aacd6dd020280590f137cc2056",
        "urls": [
          "bzz-raw://4077ddc3e091ee38556a7c0797de9b1608f32765d9f62a07efea6505bbebfa7c",
          "dweb:/ipfs/Qmbns917YEfng8nqn8wu3KnKBy562K7uWK3kxfzRsPdY27"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/ICrossChainReceiver.sol": {
        "keccak256": "0xf55d606adfb99cf829845731241d6eff48ef3a36153290fb6daf7af2250e3ec5",
        "urls": [
          "bzz-raw://1331b21d98f083181beb5f1f9b817757760a4ef3d79665e118fb4036ca7c056a",
          "dweb:/ipfs/QmUXUZeess24rcSjXxo1geCu9BxG4X7ivEHGKhSy6bPbmW"
        ],
        "license": "MIT"
      },
      "src/contracts/libs/ChainIds.sol": {
        "keccak256": "0x53d799dd1f06ca2bb27fb0905538763115854d09c6efe81b1ec083737ed0a452",
        "urls": [
          "bzz-raw://227ad995b92f95005b3acf450113a88524819021ac3176b52e603e52a6e0e822",
          "dweb:/ipfs/QmWn9DHB1WkegTSq54QPsgHaZTvuTymMYyeQBvg7foDhXc"
        ],
        "license": "MIT"
      },
      "src/contracts/libs/EncodingUtils.sol": {
        "keccak256": "0xe778561273ede6b3db73f2fb7b2b443cf0a733a209967af59db107406b68964a",
        "urls": [
          "bzz-raw://7361dd55dee3cf7bd053d7cd289e148c9451e98c8126672e6287f4e769ab8fba",
          "dweb:/ipfs/QmeH1cwptCar31XamSH2QHSeG4BrS86KNdAbnvk6VGFvLB"
        ],
        "license": "MIT"
      },
      "src/contracts/libs/Errors.sol": {
        "keccak256": "0x4a4502debe85d126eb37f8268d2d816636ae21c08b0dae7f26cb11d2bae0f80d",
        "urls": [
          "bzz-raw://ab72c20ea1e07f3bf567cddd96a0749b9a0afb0beefdc9a6f589657f4f97bc39",
          "dweb:/ipfs/QmXXu7CRbhhHqpjdvoBanTsf7wjD6N457ho3vE2dprSy2S"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 96
}
