parameters:
  # Already deployed contracts or other parameters
  - &L1_WSTETH "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
  - &ETH_DAO_AGENT "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
  - &L1_EMERGENCY_BRAKES "0x73b047fe6337183A454c5217241D780a932777bD"
  - &L2_EMERGENCY_BRAKES "0xC2b778fCc3FF311Cf1abBF4E53880277bfD14C8f"

  # NEW INTERIM MSIG
  - &L1_NEW_INTERIM_MSIG "0x83271E76df1eF8f77487A88fc6aE1478280396bD"
  - &L2_NEW_INTERIM_MSIG "0x3e277051019fDBF6A759ff847D197FE657Ca74fe"

  - &L2_NTT_MANAGER_BYTES32_ADDR "0x0000000000000000000000006981f5621691cbfe3ddd524de71076b79f0a0278"
  - &L2_WORMHOLE_TRANSCEIVER_BYTES32_ADDR "0x000000000000000000000000be3f7e06872e0df6cd7ff35b7aa4bb1446dc9986"

misc:
  - &ZERO_ADDRESS "0x0000000000000000000000000000000000000000"
  - &ZERO_BYTES32 "0x0000000000000000000000000000000000000000000000000000000000000000"
  # Chains
  - &SOL_CHAIN_ID 1 # Placeholder for ETH=2 reasoning ;[
  - &ETH_CHAIN_ID 2
  - &BSC_CHAIN_ID 4
  # Versions
  - &NTT_MANAGER_VERSION "1.1.0"
  # Rate limit
  - &RATE_LIMIT 30000000000000000000000 # 30'000 wstETH
  - &RATE_LIMIT_DURATION 86400 # per day
  # Decimals
  - &DECIMALS 18
  # Threshold
  - &THRESHOLD 2
  # Mode
  - &LOCKING_MODE 0
  - &BURNING_MODE 1

  # Wormhole system contracts (https://docs.wormhole.com/wormhole/reference/blockchain-environments/evm)
  - &L1_WORMHOLE "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B"
  - &L1_WORMHOLE_RELAYER "0x27428DD2d3DD32A4D7f7C497eAaa23130d894911"
  # no evidence outside of the research forum, but unused
  - &L1_WORMHOLE_SPECIAL_RELAYER "0x63BE47835c7D66c4aA5B2C688Dc6ed9771c94C74"

  # Axelar system contracts (https://docs.axelar.dev/dev/reference/mainnet-contract-addresses)
  - &L1_AXELAR_GAS_SERVICE "0x2d5d7d31F671F86C782533cc367F14109a082712"
  - &L1_AXELAR_GATEWAY "0x4F4495243837681061C4743b74B3eEdf548D56A5"

deployed:
  l1:
    - &l1NttManager "0xb948a93827d68a82F6513Ad178964Da487fe2BD9"
    - &l1NttManagerImpl "0xc6c1f091450b54af3280cfed790047431bc99bb1"
    - &l1WormholeTransceiver "0xA1ACC1e6edaB281Febd91E3515093F1DE81F25c0"
    - &l1WormholeTransceiverImpl "0x3ce1230f39302e62b67bbf2316558f79c25424a2"
    - &l1AxelarTransceiver "0x723AEAD29acee7E9281C32D11eA4ed0070c41B13"
    - &l1AxelarTransceiverImpl "0x87fc4B27385Bb4E69A40027931229d74EF4d1943"
    - &l1TransceiverStructs "0xf0396a8077eda579f657B5E6F3c3F5e8EE81972b"
    - &l1TransceiverStructsAxelar "0xa12bc993d8144404a8c8c812816048275a066ced"
  l2:
    - &l2wstETHToken "0x26c5e01524d2E6280A48F2c50fF6De7e52E9611C"
    - &l2wstETHTokenImpl "0x451d447776778870bdfe76d031689703aba73ee5"
    - &l2NttManager "0x6981F5621691CBfE3DdD524dE71076b79F0A0278"
    - &l2NttManagerImpl "0xe82c2a5846cfb6d8683d6b636719e7aa61486838"
    - &l2WormholeTransceiver "0xbe3F7e06872E0dF6CD7FF35B7aa4Bb1446DC9986"
    - &l2WormholeTransceiverImpl "0xb948a93827d68a82F6513Ad178964Da487fe2BD9"
    - &l2AxelarTransceiver "0x723AEAD29acee7E9281C32D11eA4ed0070c41B13"
    - &l2AxelarTransceiverImpl "0xa1ebb6a4b856df8bf6c3aca88a9115a9ab3b2e02"
    - &l2TransceiverStructs "0xf0396a8077eda579f657B5E6F3c3F5e8EE81972b"
    - &l2TransceiverStructsAxelar "0x27a3daf3b243104e9b0afae6b56026a416b852c9"

l1:
  rpcUrl: https://eth.drpc.org
  explorerHostname: api.etherscan.io
  explorerTokenEnv: ETHERSCAN_TOKEN
  contracts:
    l1NttManager:
      name: NttManager
      address: *l1NttManager
      proxyName: ERC1967Proxy
      implementation: *l1NttManagerImpl
      proxyChecks: {}
      checks:
        NTT_MANAGER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        chainId: *ETH_CHAIN_ID
        getCurrentInboundCapacity:
          - args: [ *ETH_CHAIN_ID ]
            result: 0
          - args: [ *BSC_CHAIN_ID ]
            result: *RATE_LIMIT
        getCurrentOutboundCapacity: *RATE_LIMIT # 30000000000000000000000
        getInboundLimitParams:
          - args: [ *ETH_CHAIN_ID ]
            result: [0, 0, 0]
          - args: [ *BSC_CHAIN_ID ]
            result: [768000000000008, 768000000000008, 1722437087]
        getInboundQueuedTransfer:
          - args: [ *ZERO_BYTES32 ]
            result: [ 0, 0, *ZERO_ADDRESS ]
        getMigratesImmutables: false
        getMode: *LOCKING_MODE
        getOutboundLimitParams: [768000000000008, 767999999974408, 1722437087]
        getOutboundQueuedTransfer:
          - args: [ 0 ]
            result: [ *ZERO_BYTES32, *ZERO_BYTES32, 0, 0, 0, *ZERO_ADDRESS, "0x" ]
        getPeer:
          - args: [ *ETH_CHAIN_ID ]
            result: [ *ZERO_BYTES32, 0 ]
          - args: [ *BSC_CHAIN_ID ]
            result: [ *L2_NTT_MANAGER_BYTES32_ADDR, *DECIMALS ]
        getThreshold: *THRESHOLD # 2
        getTransceiverInfo: [[ true, true, 0 ],[ true, true, 1 ]] # registered, enabled, index
        getTransceivers: [ *l1WormholeTransceiver, *l1AxelarTransceiver ] # 0xA1ACC1e6edaB281Febd91E3515093F1DE81F25c0,0x723AEAD29acee7E9281C32D11eA4ed0070c41B13
        isMessageApproved:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isMessageExecuted:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isPaused: false
        messageAttestations:
         - args: [ *ZERO_BYTES32 ]
           result: 0
        mode: *LOCKING_MODE
        nextMessageSequence: 38
        owner: *L1_NEW_INTERIM_MSIG
        pauser: *L1_NEW_INTERIM_MSIG
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
        rateLimitDuration: *RATE_LIMIT_DURATION
        token: *L1_WSTETH
        tokenDecimals: *DECIMALS # 18
        transceiverAttestedToMessage:
          - args: [ *ZERO_BYTES32, 0 ]
            result: false
          - args: [ *ZERO_BYTES32, 1 ]
            result: false
      implementationChecks:
        NTT_MANAGER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        chainId: *ETH_CHAIN_ID # 2
        getCurrentInboundCapacity:
          - args: [ *ETH_CHAIN_ID ]
            result: 0
          - args: [ *BSC_CHAIN_ID ]
            result: 0
        getCurrentOutboundCapacity: 0
        getInboundLimitParams:
          - args: [ *ETH_CHAIN_ID ]
            result: [0, 0, 0]
          - args: [ *BSC_CHAIN_ID ]
            result: [0, 0, 0]
        getInboundQueuedTransfer:
          - args: [ *ZERO_BYTES32 ]
            result: [ 0, 0, *ZERO_ADDRESS ]
        getMigratesImmutables: false
        getMode: *LOCKING_MODE
        getOutboundLimitParams: [0, 0, 0]
        getOutboundQueuedTransfer:
          - args: [ 0 ]
            result: [ *ZERO_BYTES32, *ZERO_BYTES32, 0, 0, 0, *ZERO_ADDRESS, "0x" ]
        getPeer:
          - args: [ *ETH_CHAIN_ID ]
            result: [ *ZERO_BYTES32, 0 ]
          - args: [ *BSC_CHAIN_ID ]
            result: [ *ZERO_BYTES32, 0 ]
        getThreshold: 0
        getTransceiverInfo: []
        getTransceivers: []
        isMessageApproved:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isMessageExecuted:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isPaused: false # false
        messageAttestations:
         - args: [ *ZERO_BYTES32 ]
           result: 0
        mode: *LOCKING_MODE
        nextMessageSequence: 0
        owner: *ZERO_ADDRESS
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
        rateLimitDuration: *RATE_LIMIT_DURATION # 86400
        token: *L1_WSTETH # 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0
        tokenDecimals: *DECIMALS # 18
        transceiverAttestedToMessage:
          - args: [ *ZERO_BYTES32, 0 ]
            result: false
          - args: [ *ZERO_BYTES32, 1 ]
            result: false
    l1WormholeTransceiver:
      name: WormholeTransceiver
      address: *l1WormholeTransceiver
      proxyName: ERC1967Proxy
      implementation: *l1WormholeTransceiverImpl
      proxyChecks: {}
      checks:
        WORMHOLE_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        consistencyLevel: 1
        encodeWormholeTransceiverInstruction:
          - args: [ ]
            result: [ ]
            mustRevert: true
        gasLimit: 500000
        getMigratesImmutables: false
        getNttManagerOwner: *L1_NEW_INTERIM_MSIG
        getNttManagerToken: *L1_WSTETH # 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0
        getTransceiverType: "wormhole"
        getWormholePeer:
          - args: [ *ETH_CHAIN_ID ]
            result: *ZERO_BYTES32
          - args: [ *BSC_CHAIN_ID ]
            result: *L2_WORMHOLE_TRANSCEIVER_BYTES32_ADDR
        isPaused: false
        isSpecialRelayingEnabled:
          - args: [ *ETH_CHAIN_ID ]
            result: false
          - args: [ *BSC_CHAIN_ID ]
            result: false
        isVAAConsumed:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isWormholeEvmChain:
          - args: [ *ETH_CHAIN_ID ]
            result: false # how come ???
          - args: [ *BSC_CHAIN_ID ]
            result: true
        isWormholeRelayingEnabled:
          - args: [ *ETH_CHAIN_ID ]
            result: false
          - args: [ *BSC_CHAIN_ID ]
            result: true
        nttManager: *l1NttManager
        nttManagerToken: *L1_WSTETH
        owner: *L1_NEW_INTERIM_MSIG
        parseWormholeTransceiverInstruction:
          - args: [ 0x ]
            result: [ false ]
        pauser: *L1_NEW_INTERIM_MSIG
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
        specialRelayer: *L1_WORMHOLE_SPECIAL_RELAYER # unused
        wormhole: *L1_WORMHOLE
        wormholeRelayer: *L1_WORMHOLE_RELAYER
      implementationChecks:
        WORMHOLE_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        consistencyLevel: 1
        encodeWormholeTransceiverInstruction:
          - args: [ ]
            result: [ ]
            mustRevert: true
        gasLimit: 500000
        getMigratesImmutables: false
        getNttManagerOwner: *L1_NEW_INTERIM_MSIG
        getNttManagerToken: *L1_WSTETH # 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0
        getTransceiverType: "wormhole"
        getWormholePeer:
          - args: [ *ETH_CHAIN_ID ]
            result: *ZERO_BYTES32
          - args: [ *BSC_CHAIN_ID ]
            result: *ZERO_BYTES32 # nowhere
        isPaused: false
        isSpecialRelayingEnabled:
          - args: [ *ETH_CHAIN_ID ]
            result: false
          - args: [ *BSC_CHAIN_ID ]
            result: false
        isVAAConsumed:
          - args: [ *ZERO_BYTES32 ]
            result: false
        isWormholeEvmChain:
          - args: [ *ETH_CHAIN_ID ]
            result: false
          - args: [ *BSC_CHAIN_ID ]
            result: false # unplugged
        isWormholeRelayingEnabled:
          - args: [ *ETH_CHAIN_ID ]
            result: false
          - args: [ *BSC_CHAIN_ID ]
            result: false # unplugged
        nttManager: *l1NttManager
        nttManagerToken: *L1_WSTETH
        owner: *ZERO_ADDRESS
        parseWormholeTransceiverInstruction:
          - args: [ 0x ]
            result: [ false ]
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
        specialRelayer: *L1_WORMHOLE_SPECIAL_RELAYER # unused
        wormhole: *L1_WORMHOLE
        wormholeRelayer: *L1_WORMHOLE_RELAYER
    l1AxelarTransceiver:
      name: AxelarTransceiver
      address: *l1AxelarTransceiver
      proxyName: ERC1967Proxy
      implementation: *l1AxelarTransceiverImpl
      proxyChecks: {}
      checks:
        AXELAR_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        gasService: *L1_AXELAR_GAS_SERVICE
        gateway: *L1_AXELAR_GATEWAY
        getMigratesImmutables: false
        getNttManagerOwner: *L1_NEW_INTERIM_MSIG
        getNttManagerToken: *L1_WSTETH
        getTransceiverType: "axelar"
        isPaused: false
        nttManager: *l1NttManager
        nttManagerToken: *L1_WSTETH
        owner: *L1_NEW_INTERIM_MSIG
        pauser: *L1_NEW_INTERIM_MSIG
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
      implementationChecks:
        AXELAR_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        gasService: *L1_AXELAR_GAS_SERVICE
        gateway: *L1_AXELAR_GATEWAY
        getMigratesImmutables: false
        getNttManagerOwner: *L1_NEW_INTERIM_MSIG
        getNttManagerToken: *L1_WSTETH
        getTransceiverType: "axelar"
        isPaused: false
        nttManager: *l1NttManager
        nttManagerToken: *L1_WSTETH
        owner: *ZERO_ADDRESS
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice:
          - args: [ *BSC_CHAIN_ID, 0x ]
            result: [[], 0]
            mustRevert: true
    l1TransceiverStructs:
      name: TransceiverStructs
      address: *l1TransceiverStructs
      checks:
        buildAndEncodeTransceiverMessage: REPLACEME # need to specify args
        decodeTransceiverInit: REPLACEME # need to specify args
        decodeTransceiverRegistration: REPLACEME # need to specify args
        encodeNativeTokenTransfer: REPLACEME # need to specify args
        encodeNttManagerMessage: REPLACEME # need to specify args
        encodeTransceiverInit: REPLACEME # need to specify args
        encodeTransceiverInstruction: REPLACEME # need to specify args
        encodeTransceiverInstructions: REPLACEME # need to specify args
        encodeTransceiverMessage: REPLACEME # need to specify args
        encodeTransceiverRegistration: REPLACEME # need to specify args
        nttManagerMessageDigest: REPLACEME # need to specify args
        parseNativeTokenTransfer: REPLACEME # need to specify args
        parseNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverAndNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverInstructionChecked: REPLACEME # need to specify args
        parseTransceiverInstructionUnchecked: REPLACEME # need to specify args
        parseTransceiverInstructions: REPLACEME # need to specify args
    l1TransceiverStructsAxelar:
      name: TransceiverStructs
      address: *l1TransceiverStructsAxelar
      checks:
        buildAndEncodeTransceiverMessage: REPLACEME # need to specify args
        decodeTransceiverInit: REPLACEME # need to specify args
        decodeTransceiverRegistration: REPLACEME # need to specify args
        encodeNativeTokenTransfer: REPLACEME # need to specify args
        encodeNttManagerMessage: REPLACEME # need to specify args
        encodeTransceiverInit: REPLACEME # need to specify args
        encodeTransceiverInstruction: REPLACEME # need to specify args
        encodeTransceiverInstructions: REPLACEME # need to specify args
        encodeTransceiverMessage: REPLACEME # need to specify args
        encodeTransceiverRegistration: REPLACEME # need to specify args
        nttManagerMessageDigest: REPLACEME # need to specify args
        parseNativeTokenTransfer: REPLACEME # need to specify args
        parseNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverAndNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverInstructionChecked: REPLACEME # need to specify args
        parseTransceiverInstructionUnchecked: REPLACEME # need to specify args
        parseTransceiverInstructions: REPLACEME # need to specify args

l2:
  rpcUrl: https://bsc.drpc.org
  explorerHostname: api.bscscan.com
  explorerTokenEnv: BSCSCAN_TOKEN
  contracts:
    l2wstETHToken:
      name: WstEthL2Token
      address: *l2wstETHToken
      proxyName: ERC1967Proxy
      implementation: *l2wstETHTokenImpl
      proxyChecks: {}
      checks:
        UPGRADE_INTERFACE_VERSION: REPLACEME # 5.0.0
        allowance: REPLACEME # need to specify args
        balanceOf: REPLACEME # need to specify args
        burnFrom: REPLACEME # need to specify args
        decimals: REPLACEME # 18
        minter: REPLACEME # 0x6981F5621691CBfE3DdD524dE71076b79F0A0278
        name: REPLACEME # Wrapped liquid staked Ether 2.0
        owner: *L2_NEW_INTERIM_MSIG
        proxiableUUID: REPLACEME # view call reverted
        symbol: REPLACEME # wstETH
        totalSupply: REPLACEME # 594100000000000
      implementationChecks:
        UPGRADE_INTERFACE_VERSION: REPLACEME # 5.0.0
        allowance: REPLACEME # need to specify args
        balanceOf: REPLACEME # need to specify args
        burnFrom: REPLACEME # need to specify args
        decimals: *DECIMALS
        minter: *ZERO_ADDRESS
        name: ""
        owner: *ZERO_ADDRESS
        proxiableUUID: REPLACEME # 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
        symbol: ""
        totalSupply: 0
    l2NttManager:
      name: NttManager
      address: *l2NttManager
      proxyName: ERC1967Proxy
      implementation: *l2NttManagerImpl
      proxyChecks: {}
      checks:
        NTT_MANAGER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        chainId: REPLACEME # 4
        getCurrentInboundCapacity: REPLACEME # need to specify args
        getCurrentOutboundCapacity: REPLACEME # 30000000000000000000000
        getInboundLimitParams: REPLACEME # need to specify args
        getInboundQueuedTransfer: REPLACEME # need to specify args
        getMigratesImmutables: REPLACEME # false
        getMode: REPLACEME # 1
        getOutboundLimitParams: REPLACEME # 768000000000008,768000000000008,1722354789
        getOutboundQueuedTransfer: REPLACEME # need to specify args
        getPeer: REPLACEME # need to specify args
        getThreshold: REPLACEME # 2
        getTransceiverInfo: REPLACEME # true,true,0,true,true,1
        getTransceivers: REPLACEME # 0xbe3F7e06872E0dF6CD7FF35B7aa4Bb1446DC9986,0x723AEAD29acee7E9281C32D11eA4ed0070c41B13
        isMessageApproved: REPLACEME # need to specify args
        isMessageExecuted: REPLACEME # need to specify args
        isPaused: REPLACEME # false
        messageAttestations: REPLACEME # need to specify args
        mode: REPLACEME # 1
        nextMessageSequence: REPLACEME # 31
        owner: *L2_NEW_INTERIM_MSIG
        pauser: *L2_NEW_INTERIM_MSIG
        quoteDeliveryPrice: REPLACEME # need to specify args
        rateLimitDuration: REPLACEME # view call reverted
        token: *l2wstETHToken
        tokenDecimals: *DECIMALS
        transceiverAttestedToMessage: REPLACEME # need to specify args
      implementationChecks:
        NTT_MANAGER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        chainId: REPLACEME # 4
        getCurrentInboundCapacity: REPLACEME # need to specify args
        getCurrentOutboundCapacity: REPLACEME # 0
        getInboundLimitParams: REPLACEME # need to specify args
        getInboundQueuedTransfer: REPLACEME # need to specify args
        getMigratesImmutables: REPLACEME # false
        getMode: REPLACEME # 1
        getOutboundLimitParams: REPLACEME # 0,0,0
        getOutboundQueuedTransfer: REPLACEME # need to specify args
        getPeer: REPLACEME # need to specify args
        getThreshold: REPLACEME # 0
        getTransceiverInfo: REPLACEME #
        getTransceivers: REPLACEME #
        isMessageApproved: REPLACEME # need to specify args
        isMessageExecuted: REPLACEME # need to specify args
        isPaused: false
        messageAttestations: REPLACEME # need to specify args
        mode: REPLACEME # 1
        nextMessageSequence: REPLACEME # 0
        owner: *ZERO_ADDRESS
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice: REPLACEME # need to specify args
        rateLimitDuration: REPLACEME # 86400
        token: *l2wstETHToken
        tokenDecimals: *DECIMALS
        transceiverAttestedToMessage: REPLACEME # need to specify args
    l2WormholeTransceiver:
      name: WormholeTransceiver
      address: *l2WormholeTransceiver
      proxyName: ERC1967Proxy
      implementation: *l2WormholeTransceiverImpl
      proxyChecks: {}
      checks:
        WORMHOLE_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        consistencyLevel: REPLACEME # 15
        encodeWormholeTransceiverInstruction: REPLACEME # need to specify args
        gasLimit: REPLACEME # 500000
        getMigratesImmutables: REPLACEME # false
        getNttManagerOwner: *L2_NEW_INTERIM_MSIG
        getNttManagerToken: *l2wstETHToken
        getTransceiverType: REPLACEME # wormhole
        getWormholePeer: REPLACEME # need to specify args
        isPaused: false
        isSpecialRelayingEnabled: REPLACEME # need to specify args
        isVAAConsumed: REPLACEME # need to specify args
        isWormholeEvmChain: REPLACEME # need to specify args
        isWormholeRelayingEnabled: REPLACEME # need to specify args
        nttManager: REPLACEME # 0x6981F5621691CBfE3DdD524dE71076b79F0A0278
        nttManagerToken: *l2wstETHToken
        owner: *L2_NEW_INTERIM_MSIG
        parseWormholeTransceiverInstruction: REPLACEME # need to specify args
        pauser: *L2_NEW_INTERIM_MSIG
        quoteDeliveryPrice: REPLACEME # need to specify args
        specialRelayer: REPLACEME # 0x63BE47835c7D66c4aA5B2C688Dc6ed9771c94C74
        wormhole: REPLACEME # 0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B
        wormholeRelayer: REPLACEME # 0x27428DD2d3DD32A4D7f7C497eAaa23130d894911
      implementationChecks:
        WORMHOLE_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        consistencyLevel: REPLACEME # 15
        encodeWormholeTransceiverInstruction: REPLACEME # need to specify args
        gasLimit: REPLACEME # 500000
        getMigratesImmutables: REPLACEME # false
        getNttManagerOwner: *L2_NEW_INTERIM_MSIG
        getNttManagerToken: *l2wstETHToken
        getTransceiverType: REPLACEME # wormhole
        getWormholePeer: REPLACEME # need to specify args
        isPaused: false
        isSpecialRelayingEnabled: REPLACEME # need to specify args
        isVAAConsumed: REPLACEME # need to specify args
        isWormholeEvmChain: REPLACEME # need to specify args
        isWormholeRelayingEnabled: REPLACEME # need to specify args
        nttManager: REPLACEME # 0x6981F5621691CBfE3DdD524dE71076b79F0A0278
        nttManagerToken: REPLACEME # 0x26c5e01524d2E6280A48F2c50fF6De7e52E9611C
        owner: *ZERO_ADDRESS
        parseWormholeTransceiverInstruction: REPLACEME # need to specify args
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice: REPLACEME # need to specify args
        specialRelayer: REPLACEME # 0x63BE47835c7D66c4aA5B2C688Dc6ed9771c94C74
        wormhole: REPLACEME # 0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B
        wormholeRelayer: REPLACEME # 0x27428DD2d3DD32A4D7f7C497eAaa23130d894911
    l2AxelarTransceiver:
      name: AxelarTransceiver
      address: *l2AxelarTransceiver
      proxyName: ERC1967Proxy
      implementation: *l2AxelarTransceiverImpl
      proxyChecks: {}
      checks:
        AXELAR_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        gasService: REPLACEME # 0x2d5d7d31F671F86C782533cc367F14109a082712
        gateway: REPLACEME # 0x304acf330bbE08d1e512eefaa92F6a57871fD895
        getMigratesImmutables: REPLACEME # false
        getNttManagerOwner: *L2_NEW_INTERIM_MSIG
        getNttManagerToken: *l2wstETHToken
        getTransceiverType: REPLACEME # axelar
        isPaused: REPLACEME # false
        nttManager: REPLACEME # 0x6981F5621691CBfE3DdD524dE71076b79F0A0278
        nttManagerToken: REPLACEME # 0x26c5e01524d2E6280A48F2c50fF6De7e52E9611C
        owner: *L2_NEW_INTERIM_MSIG
        pauser: *L2_NEW_INTERIM_MSIG
        quoteDeliveryPrice: REPLACEME # need to specify args
      implementationChecks:
        AXELAR_TRANSCEIVER_VERSION: *NTT_MANAGER_VERSION # 1.1.0
        gasService: REPLACEME # 0x2d5d7d31F671F86C782533cc367F14109a082712
        gateway: REPLACEME # 0x304acf330bbE08d1e512eefaa92F6a57871fD895
        getMigratesImmutables: REPLACEME # false
        getNttManagerOwner: *L2_NEW_INTERIM_MSIG
        getNttManagerToken: *l2wstETHToken
        getTransceiverType: REPLACEME # axelar
        isPaused: REPLACEME # false
        nttManager: REPLACEME # 0x6981F5621691CBfE3DdD524dE71076b79F0A0278
        nttManagerToken: REPLACEME # 0x26c5e01524d2E6280A48F2c50fF6De7e52E9611C
        owner: *ZERO_ADDRESS
        pauser: *ZERO_ADDRESS
        quoteDeliveryPrice: REPLACEME # need to specify args
    l2TransceiverStructs:
      name: TransceiverStructs
      address: *l2TransceiverStructs
      checks:
        buildAndEncodeTransceiverMessage: REPLACEME # need to specify args
        decodeTransceiverInit: REPLACEME # need to specify args
        decodeTransceiverRegistration: REPLACEME # need to specify args
        encodeNativeTokenTransfer: REPLACEME # need to specify args
        encodeNttManagerMessage: REPLACEME # need to specify args
        encodeTransceiverInit: REPLACEME # need to specify args
        encodeTransceiverInstruction: REPLACEME # need to specify args
        encodeTransceiverInstructions: REPLACEME # need to specify args
        encodeTransceiverMessage: REPLACEME # need to specify args
        encodeTransceiverRegistration: REPLACEME # need to specify args
        nttManagerMessageDigest: REPLACEME # need to specify args
        parseNativeTokenTransfer: REPLACEME # need to specify args
        parseNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverAndNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverInstructionChecked: REPLACEME # need to specify args
        parseTransceiverInstructionUnchecked: REPLACEME # need to specify args
        parseTransceiverInstructions: REPLACEME # need to specify args
    l2TransceiverStructsAxelar:
      name: TransceiverStructs
      address: *l2TransceiverStructsAxelar
      checks:
        buildAndEncodeTransceiverMessage: REPLACEME # need to specify args
        decodeTransceiverInit: REPLACEME # need to specify args
        decodeTransceiverRegistration: REPLACEME # need to specify args
        encodeNativeTokenTransfer: REPLACEME # need to specify args
        encodeNttManagerMessage: REPLACEME # need to specify args
        encodeTransceiverInit: REPLACEME # need to specify args
        encodeTransceiverInstruction: REPLACEME # need to specify args
        encodeTransceiverInstructions: REPLACEME # need to specify args
        encodeTransceiverMessage: REPLACEME # need to specify args
        encodeTransceiverRegistration: REPLACEME # need to specify args
        nttManagerMessageDigest: REPLACEME # need to specify args
        parseNativeTokenTransfer: REPLACEME # need to specify args
        parseNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverAndNttManagerMessage: REPLACEME # need to specify args
        parseTransceiverInstructionChecked: REPLACEME # need to specify args
        parseTransceiverInstructionUnchecked: REPLACEME # need to specify args
        parseTransceiverInstructions: REPLACEME # need to specify args
